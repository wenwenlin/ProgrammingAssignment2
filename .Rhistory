summary(fit)
data<-read.csv("9.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("1.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("1.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("1.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("2.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("3.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("4.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("5.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("6.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("7.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("8.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+t+I(t^2),data=data)
summary(fit)
data<-read.csv("1.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+I(log(K)^2),data=data)
summary(fit)
data<-read.csv("9.csv",header=T)
fit<-lm(log(data$Y)~log(K)*log(L)+I(log(L)^2)+I(log(K)^2),data=data)
summary(fit)
library(datasets)
data(iris)
head(iris)
install.packages("data.table")
library(data.table)
?table
?tables
DT <- data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT,3)
DT[,c(2,3)]
set.seed(123)
DT<-data.table(x=sample(letters[1:3]),1E5,TRUE)
DT
DT[,.N,by=x]
dt = data.table(a=c(1,2,2,3))
dt[,length(a),by=a]
df = data.frame(a=c(1,2,2,3))
ddply(df,.(a),summarise,V1=length(a))
library(plyr)
df = data.frame(a=c(1,2,2,3))
ddply(df,.(a),summarise,V1=length(a))
dt = data.table(a=c(1,2,2,3))
dt[, .N, by = a]
set.seed(123)
DT<-data.table(x=sample(letters[1:3],1E5,TRUE))
DT
DT[,.N,by=x]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "2Fss06hid.csv", method = "curl")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "2Fss06hid.csv")
data <- read.csv("2Fss06hid.csv", header = TRUE)
head(data, 3)
dim(data)
head(data$val)
data$val[1:3]
data$VAL[1:3]
summary(data$VAL == 24)
sum(data$VAL == 24)
?sum
sum(data$VAL == 24, na.rm=TRUE)
?table
table(data$FES)
q()
library(xlsx)
dat
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex = 1, colIndex = 18:23, rowIndex = 7:15)
dat <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, colIndex = 18:23, rowIndex = 7:15)
getwd()
?read.xlsx
dat <- read.xlsx("gov_NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[1]
head(rootNode)
rootNode[[1]]
xmlRoot
?xmlRoot
?xmlTreeParse
?fread
library(data.table)
?fread
DT <- fread("2Fss06hid.csv")
?download.file
fileUrl <- "
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile = "dat.xlsx")
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl,destfile = "dat.xlsx")
download.file(fileUrl,destfile = "dat.xlsx",mode="wb")
?download.file()
?hist
?par
y <- gl(2,50, label=c("Male", "Female"))
head(y)
?gl
head(gl(2, 50))
?read.table
olddir <- getwd()
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", colClasses = c("character", "character", "numeric"ï¼Œ, "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
initial <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", nrows = 100 )
initial
classes <- sapply(initial, class)
classes
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", colClasses = classes)
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", colClasses = classes)
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";", colClasses = classes, nrows = 100)
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
classes <- sapply(data, class)
classes
tail(data)
data <- data[data$Date == "2/2/2007" | data$Date == "1/2/2007", ]
head(data)
tail(data)
dim(data)
class(data)
sapply(data, class)
Global_active_power <- as.numeric(data$Global_active_power)
head(Global_active_power)
?hist
hist(Global_active_power, xlab = "Global Active Power (kilowatts)")
hist(Global_active_power, col = "Red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
?png
png(filename = "plot1.png", width = 480, height = 480)
hist(Global_active_power, col = "Red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
dev.off()
?plot
plot(Global_active_power)
?strptime
strptime(data$Date[1], "%d/%m/Y")
data$Date[1]
head(data$Date)
tail(data$Date)
View(data)
View(data)
as.Date(data$Date[1])
?as.Date
as.Date(data$Date[1],"%d/%m/%Y")
?detach
?strptime
as.Date("2007-02-01", "%a")
?strptime
x <- as.Date(data$Date[1],"%d/%m/%Y")
x
class(x)
unclass(x)
?as.Date
x$year
class(x)
weekdays(x)
?weekdays
weekdays(x, abb = TRUE)
Sys.setlocale("LC_TIME", "English")
?Sys.setlocale
weekdays(x, abb = TRUE)
Global_active_power <- as.numeric(data$Global_active_power)
Date <- as.Date(Date, ""%d/%m/%Y"")
attach(data)
Global_active_power <- as.numeric(data$Global_active_power)
Date <- as.Date(Date, ""%d/%m/%Y"")
rm(Global_active_power)
attach(data)
Global_active_power <- as.numeric(data$Global_active_power)
Date <- as.Date(data$Date, ""%d/%m/%Y"")
x <- as.Date(data$Date[1],"%d/%m/%Y")
x
x <- as.Date(data$Date,"%d/%m/%Y")
head(x)
Date <- as.Date(data$Date, ""%d/%m/%Y"")
date <- as.Date(data$Date, ""%d/%m/%Y"")
Date <- as.Date(data$Date, "%d/%m/%Y"")
""
Date <- as.Date(data$Date, "%d/%m/%Y")
Global_active_power <- as.numeric(data$Global_active_power)
Date <- as.Date(data$Date, "%d/%m/%Y")
?plot
plot(weekdays(Date, abb = TRUE), Global_active_power, type = "l")
plot(Global_active_power, type = "l")
w <- weekdays(Date, abb = TRUE)
summary(w)
table(x)
table(w)
x <- paste(data$Date, data$Time)
head(x)
striptime("1/2/2007", "%d/%m/%Y")
strptime("1/2/2007", "%d/%m/%Y")
strptime("1/2/2007 00:00:00", "%d/%m/%Y %H:%M:%S")
x<-strptime("1/2/2007 00:00:00", "%d/%m/%Y %H:%M:%S")
x
x$sec
Global_active_power <- as.numeric(data$Global_active_power)
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
plot(Date, Global_active_power)
plot(Date, Global_active_power, type = "l")
plot(Date, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
data <- read.table("household_power_consumption.txt", header = TRUE, sep = ";")
data <- data[data$Date == "2/2/2007" | data$Date == "1/2/2007", ]
Global_active_power <- as.numeric(data$Global_active_power)
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
png(filename = "plot2.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Global_active_power, type = "l", ylab = "Global Active Power (kilowatts)")
dev.off()
png(filename = "plot2.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
dev.off()
Global_active_power <- as.numeric(data$Global_active_power)
hist(Global_active_power, col = "Red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
png(filename = "plot1.png", width = 480, height = 480)
hist(Global_active_power, col = "Red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
dev.off()
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
Sub_meeting_1 <- as.numeric(data$Sub_meeting_1)
Sub_meeting_2 <- as.numeric(data$Sub_meeting_2)
Sub_meeting_3 <- as.numeric(data$Sub_meeting_3)
plot(Date, Sub_meeting_1, type = "l", xlab = "", ylab = "Energy sub meeting")
lines(Date, Sub_meeting_2, col = "red")
lines(Date, Sub_meeting_3, col = "blue")
length(Date)
length(Sub_meeting_1)
length(data$Sub_meeting_1)
dim(data)
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
Sub_metering_1 <- as.numeric(data$Sub_metering_1)
Sub_metering_2 <- as.numeric(data$Sub_metering_2)
Sub_metering_3 <- as.numeric(data$Sub_metering_3)
plot(Date, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
summary(Date)
legend(30, "2007-02-02 11:59:15")
legend(30, "2007-02-02 11:59:15", col = c("black", "red", "blue"), title = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"))
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
png(filename = "plot3.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
dev.off()
png(filename = "plot3.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
dev.off()
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
Global_active_power <- as.numeric(data$Global_active_power)
Voltage <- as.numeric(data$Voltage)
Sub_metering_1 <- as.numeric(data$Sub_metering_1)
Sub_metering_2 <- as.numeric(data$Sub_metering_2)
Sub_metering_3 <- as.numeric(data$Sub_metering_3)
Global_reactive_power <- as.numeric(data$Global_reactive_power)
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(Date, Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(Date, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
par(mfrow = c(2, 2))
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(Date, Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(Date, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
png(filename = "plot3.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
par(mfrow = c(2, 2))
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(Date, Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(Date, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
dev.off()
png(filename = "plot4.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
par(mfrow = c(2, 2))
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(Date, Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(Date, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
dev.off()
head(Submetering_1)
head(Sub_metering_1)
summary(Sub_metering_1)
summary(Sub_metering_2)
View(data)
View(data)
View(data)
summary(data$Sub_metering_2)
hist(Sub_metering_2)
par(mfrow = c(1,1))
hist(Sub_metering_2)
rug(Sub_metering_2)
Sub_metering_2 <- as.numeric(data$Sub_metering_2)
summary(Sub_metering_2)
x <- data$Sub_metering_2[data$Sub_metering_2 == "2.000"]
summary(x)
x2 <- as.numeric(x[1])
x2
x2 <- as.numeric(as.character(x[1]))
x2
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
Global_active_power <- as.numeric(as.character(data$Global_active_power))
Voltage <- as.numeric(as.character(data$Voltage))
Sub_metering_1 <- as.numeric(as.character(data$Sub_metering_1))
Sub_metering_2 <- as.numeric(as.character(data$Sub_metering_2))
Sub_metering_3 <- as.numeric(as.character(data$Sub_metering_3))
Global_reactive_power <- as.numeric(data$Global_reactive_power)
png(filename = "plot4.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
par(mfrow = c(2, 2))
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(Date, Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
plot(Date, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
dev.off()
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
Sub_metering_1 <- as.numeric(as.character(data$Sub_metering_1))
Sub_metering_2 <- as.numeric(as.character(data$Sub_metering_2))
Sub_metering_3 <- as.numeric(as.character(data$Sub_metering_3))
png(filename = "plot3.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Sub_metering_1, type = "l", ylim = c(0, 35), xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
dev.off()
png(filename = "plot3.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(Date, Sub_metering_2, col = "red")
lines(Date, Sub_metering_3, col = "blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), col = c("black", "red", "blue"), lty = 1)
dev.off()
Global_active_power <- as.numeric(as.character(data$Global_active_power))
Date <- paste(data$Date, data$Time)
Date <- strptime(Date, "%d/%m/%Y %H:%M:%S")
png(filename = "plot2.png", width = 480, height = 480)
Sys.setlocale("LC_TIME", "English")
plot(Date, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
dev.off()
Global_active_power <- as.numeric(as.character(data$Global_active_power))
hist(Global_active_power, col = "Red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
png(filename = "plot1.png", width = 480, height = 480)
hist(Global_active_power, col = "Red", xlab = "Global Active Power (kilowatts)", ylab = "Frequency", main = "Global Active Power")
dev.off()
?rpois
set.seed(1)
rpois(5, 2)
library(XML)
library(RCurl)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xData <- getURL(fileURL)
doc <- xmlParse(xData)
install.packages("RCurl")
library(XML)
library(RCurl)
fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xData <- getURL(fileURL)
doc <- xmlParse(xData)
library(XML)
library(RCurl)
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
xData <- getURL(fileurl)
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
fileUrl = sub('https', 'http', fileUrl)
Q4 = xmlTreeParse(fileUrl, useInternal=TRUE)
as.Date("17:24:00", format="%H:%M:%s")
?as.Date
?strptime
hpc<-read.table("household_power_consumption.txt",header=TRUE,na.strings="?",sep=";")
sapply(hpc, class)
?read.csv.sql
install.packages("sqldf ")
install.packages("sqldf")
hpc_s<-hpc[(hpc$Date=="1/2/2007" | hpc$Date=="2/2/2007" ),]
q()
x
m <- matrix(data = rep(1, 9),
3, 3)
m
m[1,1] <- NULL
m[1,1]
m[1,1]<-2
M
m
class(NULL)
class(1)
class(NA)
class(NAN)
as.numeric(NA)
class(as.numeric(NA))
class(as.numeric(NA))
m
getwd()
setwd("D:/mygit/ProgrammingAssignment2")
source("cachematrix.R")
cacheSolve(makeCacheMatrix(m))
m
m <- matrix(c(1,0,0,0,1,0,0,0,1), nrow =3, ncol = 3)
m
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(m))
source("cachematrix.R")
debug(cacheSolve)
cacheSolve(makeCacheMatrix(m))
inv_x
inv
inv_x <<- m
inv_x
inv_x <- matrix(data = rep(as.numeric(NA), 9),
3,3)
inv_x
inv_x <<- m
inv_x
debug(cacheSolve)
cacheSolve(makeCacheMatrix(m))
inv
inv_x
k <<- inv
k
inv_x <<- inv
inv_x
?parent.env
makeVector <- function(x = numeric()) {
m <- NULL
print(environment())
evn <- environment()
print(parent.env(evn))
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
getevn<- function() environment()
list(set = set, get = get,
setmean = setmean,
getmean = getmean,
getevn = getevn)
}
x <- 1:10000
vec<-makeVector(x)
vec$getevn()
<environment: 0x353b260>
parent.env(vec$getevn())
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
?undebug
undebug(cacheSolve)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv <- cacheSolve(x)
undebug(makeCacheMatrix)
undebug(cacheSolve)
inv <- cacheSolve(x)
